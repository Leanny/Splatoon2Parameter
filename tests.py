import unittest
import param_calc

class TestParameterCalculator(unittest.TestCase):
    @classmethod
    def setUpClass(cls):
        cls.aps = sorted([mains*10 + subs*3 for mains in range(4) for subs in range(10)])
        
        cls.ps = [param_calc.calcSkillPoint2Percent(ap)/100.0 for ap in cls.aps]
        
        cls.abilities = {
            'MainInkSave - ConsumeRt_Main_Low': [0.6, 0.8, 1.0],
            'MainInkSave - ConsumeRt_Main': [0.55, 0.775, 1.0],
            'MainInkSave - ConsumeRt_Main_High': [0.5, 0.7, 1.0],
            'SubInkSaver - ConsumeRt_Sub_Low': [0.8, 0.9, 1.0],
            'SubInkSaver - ConsumeRt_Sub': [0.7, 0.85, 1.0],
            'SubInkSaver - ConsumeRt_Sub_High': [0.65, 0.825, 1.0],
            'SquidMoveUp - MoveVel_Stealth_BigWeapon': [2.4, 2.064, 1.728],
            'SquidMoveUp - MoveVel_Stealth': [2.4, 2.16, 1.92],
            'SquidMoveUp - MoveVel_Stealth_ShortWeapon': [2.4, 2.208, 2.016],
            'RunSpeedUp - MoveVel_Human_BigWeapon': [1.44, 1.16, 0.88],
            'RunSpeedUp - MoveVel_Human': [1.44, 1.2, 0.96],
            'RunSpeedUp - MoveVel_Human_ShortWeapon': [1.44, 1.24, 1.04],
            'RunSpeedUp - MoveVelRt_Human_Shot': [1.25, 1.125, 1.0],
            'RunSpeedUp - MoveVelRt_Human_ShotG': [1.3, 1.15, 1.0],
            'SpecialIncreaseUp - SpecialRt_Charge': [1.3, 1.15, 1.0],
            'RespawnTimeSave - Dying_AroudFrm': [30.0, 60.0, 90.0],
            'RespawnTimeSave - Dying_ChaseFrm': [90.0, 180.0, 270.0],
            'RespawnSpecialGaugeSave - SpecialRt_Restart': [1.0, 0.8, 0.5],
            'RespawnSpecialGaugeSave - SpecialRt_Restart_SuperLanding': [1.25, 1.05, 0.75],
            'OpInkEffectReduction - OpInk_JumpGnd_Msn': [1.05, 0.825, 0.6],
            'OpInkEffectReduction - OpInk_JumpGnd': [1.05, 0.925, 0.8],
            'OpInkEffectReduction - OpInk_VelGnd_ShotK': [1.0, 0.75, 0.5],
            'OpInkEffectReduction - OpInk_VelGnd_Shot': [0.4, 0.26, 0.12],
            'OpInkEffectReduction - OpInk_VelGnd': [0.72, 0.48, 0.24],
            'OpInkEffectReduction - OpInk_Damage_Lmt': [0.2, 0.3, 0.4],
            'OpInkEffectReduction - OpInk_Damage': [0.0015, 0.00225, 0.003],
            'MarkingTimeReduction - MarkingTime_ShortRt_Thermal': [1.0, 1.0, 1.0],
            'MarkingTimeReduction - Silhouette_DistFar': [290.0, 230.0, 170.0],
            'MarkingTimeReduction - Silhouette_DistNear': [250.0, 190.0, 130.0],
            'MarkingTimeReduction - MarkingTime_ShortRt_Trap': [0.1, 0.55, 1.0],
            'MarkingTimeReduction - MarkingTime_ShortRt': [0.1, 0.55, 1.0],
            'JumpTimeSave - DokanWarp_TameFrm': [20.0, 35.0, 80.0],
            'JumpTimeSave - DokanWarp_MoveFrm': [96.6, 132.3, 138.0],
            'InkRecoveryUp - RecoverFullFrm_Ink': [117.0, 148.5, 180.0],
            'InkRecoveryUp - RecoverNrmlFrm_Ink': [220.0, 410.0, 600.0],
            'BombDistanceUp - BombThrow_VelZ': [16.8, 14.0, 11.2],
            'BombDistanceUp - BombThrow_VelZ_BombPiyo': [18.4, 16.0, 13.6],
            'BombDistanceUp - BombThrow_VelZ_PointSensor': [18.4, 16.0, 13.6],
            'BombDamageReduction - BurstDamageRt_SubH': [0.5, 0.75, 1.0],
            'BombDamageReduction - BurstDamageRt_SubL': [0.6, 0.8, 1.0],
            'BombDamageReduction - BurstDamageRt_Special': [0.65, 0.825, 1.0],
            'BombDamageReduction - BurstDamageRt_Main': [1.0, 1.0, 1.0],
        }
        
        
    def assertListAlmostEqual(self, a, b, places=7, msg=None, delta=None):
        len_a = len(a)
        self.assertEqual(len_a, len(b))
        
        for i in range(len_a):
            self.assertAlmostEqual(a[i],b[i], places, msg, delta)        
        
    def test_calcSkillPoint2Percent(self):
        expected = [0.0,0.09656999999999999,0.18827999999999995,0.27513,0.303,0.35711999999999994,0.38337,0.43424999999999997,0.45887999999999995,0.50652,0.52953,0.552,0.57393,0.59532,0.6161699999999999,0.6364799999999999,0.65625,0.67548,0.6941700000000001,0.71232,0.72993,0.747,0.7635299999999999,0.77952,0.7949699999999998,0.8098799999999998,0.8242499999999999,0.8380799999999999,0.85137,0.8641199999999999,0.8763299999999998,0.8991299999999999,0.90972,0.92928,0.93825,0.9545699999999999,0.9619199999999998,0.9807299999999998,0.9946799999999999,1.0,]
        
        self.assertListAlmostEqual(self.ps, expected)
        
    def test_lerpN_06(self):
        expected = [0.0,0.17859267895501138,0.2921161974778907,0.3863302818854528,0.41480220716335175,0.46820864823482355,0.49333381419042754,0.5407875894982674,0.5632275605321124,0.6057561840682256,0.6259171475846773,0.6453836800126507,0.6641823423133446,0.6823368850681503,0.6998686507928579,0.7167969028224157,0.7331390966730195,0.7489111058385685,0.7641274111242673,0.7788012605280862,0.7929448051273296,0.806569215260159,0.8196847804049255,0.8323009954792955,0.8444266357535413,0.8560698221598805,0.8672380784545929,0.8779383814313534,0.8881772051775311,0.897960560198694,0.9072940281015285,0.924631666040981,0.9326451157446622,0.9473820088045181,0.9541128407645687,0.9663156863787243,0.9717934994407655,0.985762386844547,0.9960765937043605,1.0,]
        
        s=0.6        
        
        results = [param_calc.lerpN(s,p) for p in self.ps]
        
        self.assertListAlmostEqual(results, expected)
        
    def test_lerpN_04(self):
        expected = [0.0,0.045502412683597684,0.10998748816664591,0.1815973336379792,0.2063024767070971,0.2563613155473472,0.2815613903281614,0.3319847234988187,0.3571005959440286,0.40690960729596476,0.4315222432522533,0.45589204765278285,0.4799862981229605,0.5037746639745642,0.5272289487580386,0.5503228727406333,0.573031887671522,0.5953330179160276,0.6172047233215368,0.6386267801428593,0.6595801770910348,0.6800470241373799,0.7000104721469411,0.7194546417633714,0.7383645602432224,0.7567261051583409,0.7745259540629081,0.7917515393660138,0.8083910077685978,0.8244331837205645,0.8398675364340996,0.8688736966572214,0.8824274117462619,0.9075949753404551,0.9191939221205513,0.9403885635581438,0.9499722307614337,0.9746058058536631,0.9929733720595189,1.0,]
        
        s=0.4        
        
        results = [param_calc.lerpN(s,p) for p in self.ps]
        
        self.assertListAlmostEqual(results, expected)
        
    def test_lerpN_075(self):
        expected = [0.0,0.3790281435538559,0.500053584074994,0.5853117351769036,0.6092271444173692,0.6522305134088723,0.6717163320075699,0.7073729425398044,0.72375645941931,0.7540436914065469,0.7680760663981915,0.7814389244146506,0.7941771946711811,0.8063303366905343,0.8179332101829322,0.8290167741645557,0.8396086544968366,0.849733608834023,0.8594139107127337,0.8686696692789311,0.8775190973131791,0.8859787373727601,0.894063653738023,0.9017875962351624,0.9091631407713607,0.9162018104632079,0.9229141804951566,0.9293099692602533,0.9353981178727409,0.9411868597733403,0.9466837818520674,0.9568295980024446,0.9614908868438472,0.9700176588258602,0.9738928329532107,0.980888114224186,0.9840157140517658,0.9919566863274075,0.997788555166277,1.0,]
        
        s=0.75        
        
        results = [param_calc.lerpN(s,p) for p in self.ps]
        
        self.assertListAlmostEqual(results, expected)
        
    def test_lerpN_01377(self):
        expected = [0.0,0.0012480822027638955,0.008426558515462812,0.024937597287194163,0.032863872384078494,0.05258596741634333,0.06441417929497252,0.09200070805940765,0.10772694590478628,0.14289868975339656,0.16226195855473763,0.18274380268394289,0.2042867433644126,0.22682784035792286,0.2502992509032946,0.2746287643050595,0.29974031381316796,0.325554467190298,0.3519888971647295,0.3789588328037855,0.4063774927079122,0.43415650081274587,0.46220628549167103,0.49043646257090523,0.518756202800476,0.5470745842654353,0.5753009301706253,0.6033451323879637,0.6311179611164265,0.6585313609708351,0.685498733785465,0.7377578976059003,0.7628861426397514,0.8107491869717941,0.8333358380904897,0.8754718516671343,0.8948920985340904,0.9458626582404865,0.9848578649633202,1.0,]
        
        s=0.1377        
        
        results = [param_calc.lerpN(s,p) for p in self.ps]
        
        self.assertListAlmostEqual(results, expected)
        
    def test_slope(self):
        expected = [0.0,0.5000000000000001,0.5,0.4999999999999999,0.5,0.5000000000000002,0.5000000000000002,0.5,0.5,0.13768115942028955,0.75,0.5,0.6000000000000001,0.4999999999999999,0.49999999999999994,0.0,0.49999999999999994,0.5,0.5,0.5000000000000001,0.5000000000000001,0.5,0.4999999999999999,0.5,0.5,0.5,0.6000000000000001,0.6000000000000001,0.5,0.5,0.5,0.4999999999999996,0.5,0.4999999999999999,0.5,0.4999999999999996,0.5000000000000004,0.5000000000000001,0.5000000000000006,0.5,0.5000000000000001,0.5,]
        
        names = sorted([*self.abilities.keys()])        
        results = [param_calc.get_slope_simple(self.abilities[name]) for name in names]
        
        self.assertListAlmostEqual(results, expected)

    def test_effect(self):
        expected = [[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,],[1.0,0.96619,0.934095,0.903715,0.89395,0.875015,0.86581,0.8480300000000001,0.839385,0.822725,0.814675,0.8068,0.799135,0.7916449999999999,0.78433,0.777225,0.77033,0.763575,0.75703,0.750695,0.744535,0.73855,0.732775,0.727175,0.72175,0.716535,0.71153,0.7066650000000001,0.70201,0.697565,0.693295,0.685315,0.681605,0.674745,0.6715949999999999,0.6658900000000001,0.663335,0.656755,0.6518550000000001,0.65,],[1.0,0.9517,0.90585,0.8624499999999999,0.8485,0.82145,0.8083,0.7829,0.7705500000000001,0.74675,0.73525,0.724,0.71305,0.70235,0.6919,0.6817500000000001,0.6718999999999999,0.66225,0.6529,0.64385,0.63505,0.6265000000000001,0.61825,0.61025,0.6025,0.5950500000000001,0.5879,0.5809500000000001,0.5743,0.56795,0.56185,0.55045,0.54515,0.53535,0.53085,0.5226999999999999,0.51905,0.5096499999999999,0.50265,0.5,],[1.0,0.96136,0.92468,0.88996,0.8788,0.85716,0.84664,0.8263199999999999,0.81644,0.7974,0.7882,0.7792,0.77044,0.76188,0.75352,0.7454000000000001,0.73752,0.7298,0.72232,0.7150799999999999,0.70804,0.7012,0.6946,0.6881999999999999,0.6819999999999999,0.67604,0.67032,0.66476,0.65944,0.65436,0.6494800000000001,0.64036,0.63612,0.62828,0.6246799999999999,0.61816,0.61524,0.60772,0.60212,0.6,],[11.2,11.74096,12.25448,12.74056,12.896799999999999,13.19976,13.34704,13.63152,13.76984,14.0364,14.1652,14.2912,14.41384,14.53368,14.65072,14.7644,14.87472,14.982800000000001,15.087520000000001,15.188880000000001,15.28744,15.3832,15.4756,15.5652,15.652000000000001,15.73544,15.815520000000001,15.893360000000001,15.96784,16.03896,16.10728,16.23496,16.29432,16.40408,16.45448,16.54576,16.586640000000003,16.69192,16.77032,16.8,],[13.6,14.06368,14.50384,14.92048,15.0544,15.314079999999999,15.44032,15.684159999999999,15.802719999999999,16.0312,16.1416,16.2496,16.35472,16.45744,16.55776,16.6552,16.74976,16.842399999999998,16.93216,17.01904,17.10352,17.185599999999997,17.264799999999997,17.3416,17.416,17.48752,17.55616,17.62288,17.68672,17.74768,17.80624,17.91568,17.966559999999998,18.06064,18.103839999999998,18.18208,18.217119999999998,18.30736,18.37456,18.4,],[13.6,14.06368,14.50384,14.92048,15.0544,15.314079999999999,15.44032,15.684159999999999,15.802719999999999,16.0312,16.1416,16.2496,16.35472,16.45744,16.55776,16.6552,16.74976,16.842399999999998,16.93216,17.01904,17.10352,17.185599999999997,17.264799999999997,17.3416,17.416,17.48752,17.55616,17.62288,17.68672,17.74768,17.80624,17.91568,17.966559999999998,18.06064,18.103839999999998,18.18208,18.217119999999998,18.30736,18.37456,18.4,],[180.0,173.9142,168.1371,162.6687,160.911,157.5027,155.8458,152.6454,151.0893,148.0905,146.6415,145.224,143.8443,142.4961,141.1794,139.9005,138.6594,137.4435,136.2654,135.1251,134.0163,132.939,131.8995,130.8915,129.915,128.9763,128.0754,127.1997,126.36179999999999,125.5617,124.79310000000001,123.35669999999999,122.6889,121.4541,120.8871,119.86019999999999,119.4003,118.2159,117.3339,117.0,],[600.0,563.292,528.446,495.462,484.86,464.302,454.308,435.004,425.61800000000005,407.53000000000003,398.79,390.24,381.918,373.78599999999994,365.84400000000005,358.13,350.644,343.31,336.204,329.32599999999996,322.638,316.14,309.87,303.79,297.9,292.238,286.804,281.522,276.46799999999996,271.642,267.00600000000003,258.342,254.31400000000002,246.86599999999999,243.44599999999997,237.252,234.478,227.334,222.014,220.0,],[138.0,137.94828346910046,137.6510344676638,136.9679054463844,136.63943568329915,135.8232896796028,135.3326560198983,134.19242498763725,133.53954840744652,132.0846623923018,131.28344347377757,130.43440656888475,129.5437932944416,128.61022978894763,127.63616781112987,126.62934720461001,125.59345522866532,124.52090354716317,123.42585817973494,122.31236429883975,121.17794959165255,120.02592086635232,118.8668102940948,117.69742050408622,116.52117486953733,115.34951231126993,114.18667395093553,113.01980643029486,111.86908277998364,110.7386065431135,109.62313132463174,107.45973795612468,106.41849979026155,104.43291730091286,103.49463709854908,101.75220700850824,100.95367045478434,98.84471216340907,97.22453932311393,96.6,],[80.0,57.255379483659745,49.99546223694483,44.882885251941964,43.446371334957846,40.86707882098996,39.69571114573501,37.55965174595176,36.57382691642643,34.758119951338834,33.91651964531574,33.11366453512097,32.35040209221225,31.62085438154503,30.923015710402723,30.258344851245383,29.625073767181945,29.015356949692148,28.434240465515934,27.880427210932567,27.349752293739463,26.841275757634392,26.357055572482857,25.89332039349722,25.44935718344408,25.027327947460527,24.626543349689356,24.240849588093795,23.875292134877668,23.52933088059723,23.199780140747343,22.59101913644752,22.311073180794132,21.798420595488203,21.565137630334057,21.145945488970774,20.959566645298267,20.483354446502105,20.13218709148149,20.0,],[1.0,0.95653,0.915265,0.876205,0.86365,0.839305,0.82747,0.80461,0.7934950000000001,0.7720750000000001,0.761725,0.7516,0.7417450000000001,0.7321150000000001,0.72271,0.7135750000000001,0.70471,0.6960250000000001,0.68761,0.679465,0.6715450000000001,0.66385,0.656425,0.649225,0.64225,0.635545,0.6291100000000001,0.622855,0.61687,0.6111550000000001,0.6056650000000001,0.595405,0.590635,0.581815,0.5777650000000001,0.57043,0.567145,0.5586850000000001,0.552385,0.55,],[1.0,0.9106832176391358,0.8539304674083015,0.8068503816943279,0.7925988964183242,0.7659053380747413,0.7533188677578311,0.7296291498612655,0.7183771742982183,0.6971307215129219,0.6870544929698741,0.6773081599936747,0.6679216217684119,0.6588400043689312,0.650053118592727,0.6415932489961524,0.6334510346617434,0.6255362763048391,0.6179241259688126,0.610607427236141,0.6035396063179725,0.5967153923699204,0.5901694773587889,0.583857370939378,0.5777749399765673,0.5719572989764121,0.5664003459630229,0.5610230891579598,0.5558998650632242,0.5510273781894577,0.5463644310810867,0.5376955350472311,0.5336849975221772,0.5263014824050669,0.5229248441152219,0.5168309663509987,0.5141106956007677,0.5071299178298416,0.5019543231639301,0.5,],[1.0,0.96136,0.92468,0.88996,0.8788,0.85716,0.84664,0.8263199999999999,0.81644,0.7974,0.7882,0.7792,0.77044,0.76188,0.75352,0.7454000000000001,0.73752,0.7298,0.72232,0.7150799999999999,0.70804,0.7012,0.6946,0.6881999999999999,0.6819999999999999,0.67604,0.67032,0.66476,0.65944,0.65436,0.6494800000000001,0.64036,0.63612,0.62828,0.6246799999999999,0.61816,0.61524,0.60772,0.60212,0.6,],[1.0,0.91306,0.83053,0.75241,0.7273000000000001,0.6786099999999999,0.65494,0.6092200000000001,0.58699,0.54415,0.52345,0.5031999999999999,0.48349,0.4642299999999999,0.44542000000000004,0.42715000000000003,0.40942,0.39205,0.37522,0.35892999999999997,0.34309,0.3277,0.3128500000000001,0.29845,0.2845,0.27109000000000005,0.2582199999999999,0.24570999999999998,0.23373999999999995,0.22231,0.21133000000000002,0.19080999999999992,0.18127000000000004,0.16362999999999994,0.15552999999999995,0.14085999999999999,0.13429000000000002,0.11736999999999997,0.10476999999999992,0.09999999999999998,],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,],[1.0,0.91306,0.83053,0.75241,0.7273000000000001,0.6786099999999999,0.65494,0.6092200000000001,0.58699,0.54415,0.52345,0.5031999999999999,0.48349,0.4642299999999999,0.44542000000000004,0.42715000000000003,0.40942,0.39205,0.37522,0.35892999999999997,0.34309,0.3277,0.3128500000000001,0.29845,0.2845,0.27109000000000005,0.2582199999999999,0.24570999999999998,0.23373999999999995,0.22231,0.21133000000000002,0.19080999999999992,0.18127000000000004,0.16362999999999994,0.15552999999999995,0.14085999999999999,0.13429000000000002,0.11736999999999997,0.10476999999999992,0.09999999999999998,],[170.0,181.592,192.596,203.012,206.36,212.852,216.008,222.10399999999998,225.06799999999998,230.78,233.54,236.24,238.868,241.436,243.94400000000002,246.38,248.744,251.06,253.304,255.476,257.58799999999997,259.64,261.62,263.53999999999996,265.4,267.188,268.904,270.572,272.168,273.692,275.156,277.892,279.164,281.516,282.596,284.552,285.428,287.68399999999997,289.36400000000003,290.0,],[130.0,141.592,152.596,163.012,166.36,172.852,176.008,182.10399999999998,185.06799999999998,190.78,193.54,196.24,198.868,201.436,203.94400000000002,206.38,208.744,211.06,213.304,215.476,217.588,219.64,221.62,223.54,225.4,227.188,228.904,230.572,232.168,233.692,235.156,237.892,239.164,241.51600000000002,242.596,244.55200000000002,245.428,247.684,249.364,250.0,],[0.003,0.0028551,0.00271755,0.00258735,0.0025455,0.00246435,0.0024249,0.0023487,0.00231165,0.00224025,0.0022057500000000002,0.002172,0.0021391500000000003,0.00210705,0.0020757,0.00204525,0.0020157,0.00198675,0.0019587,0.00193155,0.00190515,0.0018795,0.00185475,0.0018307500000000001,0.0018075,0.00178515,0.0017637,0.00174285,0.0017228999999999999,0.00170385,0.00168555,0.00165135,0.00163545,0.00160605,0.00159255,0.0015681,0.00155715,0.00152895,0.00150795,0.0015,],[0.4,0.38068,0.36234,0.34498,0.33940000000000003,0.32858000000000004,0.32332,0.31316,0.30822000000000005,0.2987,0.29410000000000003,0.2896,0.28522000000000003,0.28094,0.27676,0.27270000000000005,0.26876,0.2649,0.26116,0.25754,0.25402,0.25060000000000004,0.24730000000000002,0.2441,0.241,0.23802,0.23516,0.23238000000000003,0.22972,0.22718000000000002,0.22474000000000002,0.22018000000000001,0.21806000000000003,0.21414,0.21234,0.20908000000000002,0.20762000000000003,0.20386,0.20106000000000002,0.2,],[0.8,0.82415,0.847075,0.8687750000000001,0.87575,0.889275,0.89585,0.9085500000000001,0.914725,0.926625,0.9323750000000001,0.9380000000000001,0.9434750000000001,0.948825,0.9540500000000001,0.959125,0.9640500000000001,0.968875,0.97355,0.978075,0.982475,0.98675,0.9908750000000001,0.9948750000000001,0.99875,1.002475,1.00605,1.009525,1.01285,1.016025,1.019075,1.024775,1.027425,1.0323250000000002,1.034575,1.03865,1.040475,1.045175,1.048675,1.05,],[0.6,0.64347,0.684735,0.723795,0.7363500000000001,0.760695,0.77253,0.79539,0.806505,0.827925,0.838275,0.8484,0.858255,0.867885,0.87729,0.886425,0.89529,0.903975,0.91239,0.9205350000000001,0.928455,0.93615,0.943575,0.950775,0.9577500000000001,0.9644550000000001,0.97089,0.977145,0.9831300000000001,0.988845,0.994335,1.0045950000000001,1.009365,1.0181850000000001,1.022235,1.02957,1.032855,1.041315,1.047615,1.05,],[0.24,0.286368,0.330384,0.372048,0.38544,0.411408,0.42403199999999996,0.448416,0.46027199999999996,0.48312,0.49416,0.5049600000000001,0.5154719999999999,0.525744,0.535776,0.54552,0.5549759999999999,0.56424,0.573216,0.581904,0.590352,0.59856,0.6064799999999999,0.61416,0.6215999999999999,0.628752,0.635616,0.642288,0.6486719999999999,0.654768,0.6606239999999999,0.6715679999999999,0.6766559999999999,0.686064,0.690384,0.6982079999999999,0.7017119999999999,0.710736,0.717456,0.72,],[0.12,0.147048,0.172724,0.197028,0.20484000000000002,0.21998800000000002,0.227352,0.241576,0.248492,0.26182,0.26826,0.27456,0.280692,0.28668400000000005,0.292536,0.29822000000000004,0.303736,0.30913999999999997,0.314376,0.31944400000000006,0.324372,0.32916,0.33377999999999997,0.33826,0.3426,0.34677199999999997,0.35077600000000003,0.354668,0.35839200000000004,0.36194800000000005,0.365364,0.371748,0.374716,0.38020400000000004,0.382724,0.387288,0.389332,0.394596,0.39851600000000004,0.4,],[0.5,0.5483,0.59415,0.6375500000000001,0.6515,0.67855,0.6917,0.7171,0.7294499999999999,0.75325,0.76475,0.776,0.78695,0.79765,0.8081,0.8182499999999999,0.8281000000000001,0.83775,0.8471,0.85615,0.86495,0.8734999999999999,0.88175,0.88975,0.8975,0.9049499999999999,0.9121,0.9190499999999999,0.9257,0.93205,0.93815,0.94955,0.95485,0.96465,0.96915,0.9773000000000001,0.98095,0.9903500000000001,0.99735,1.0,],[0.5,0.5893167823608642,0.6460695325916985,0.6931496183056721,0.7074011035816758,0.7340946619252587,0.7466811322421689,0.7703708501387345,0.7816228257017817,0.8028692784870781,0.8129455070301259,0.8226918400063253,0.8320783782315881,0.8411599956310688,0.849946881407273,0.8584067510038476,0.8665489653382566,0.8744637236951609,0.8820758740311874,0.889392572763859,0.8964603936820275,0.9032846076300796,0.9098305226412111,0.916142629060622,0.9222250600234327,0.9280427010235879,0.9335996540369771,0.9389769108420402,0.9441001349367758,0.9489726218105423,0.9536355689189133,0.9623044649527689,0.9663150024778228,0.9736985175949331,0.9770751558847781,0.9831690336490013,0.9858893043992323,0.9928700821701584,0.9980456768360699,1.0,],[0.75,0.8393167823608642,0.8960695325916985,0.9431496183056721,0.9574011035816758,0.9840946619252587,0.9966811322421689,1.0203708501387345,1.0316228257017817,1.0528692784870781,1.062945507030126,1.0726918400063252,1.0820783782315881,1.091159995631069,1.099946881407273,1.1084067510038476,1.1165489653382568,1.124463723695161,1.1320758740311874,1.139392572763859,1.1464603936820275,1.1532846076300796,1.1598305226412111,1.166142629060622,1.1722250600234327,1.1780427010235879,1.183599654036977,1.1889769108420403,1.1941001349367757,1.1989726218105423,1.2036355689189133,1.2123044649527688,1.2163150024778226,1.223698517594933,1.2270751558847781,1.2331690336490013,1.2358893043992323,1.2428700821701584,1.24804567683607,1.25,],[90.0,84.204,78.702,73.494,71.82,68.574,66.996,63.948,62.466,59.61,58.230000000000004,56.879999999999995,55.566,54.282,53.028,51.81,50.628,49.47,48.348,47.262,46.206,45.18,44.190000000000005,43.230000000000004,42.3,41.406000000000006,40.547999999999995,39.714000000000006,38.916,38.154,37.422000000000004,36.054,
35.418000000000006,34.242,33.702,32.724,32.286,31.158,30.317999999999998,30.0,],[270.0,252.612,236.106,220.482,215.46,205.722,200.988,191.844,187.39800000000002,178.83,174.69,170.64,166.698,162.846,159.084,155.43,151.88400000000001,148.41,145.04399999999998,141.786,138.618,135.54,132.57000000000002,129.69,126.9,124.21800000000002,121.644,119.142,116.74799999999999,114.46200000000002,112.26600000000002,108.162,106.25400000000002,102.726,101.106,98.172,96.858,93.47399999999999,90.95400000000001,90.0,],[1.0,1.02415,1.047075,1.068775,1.07575,1.089275,1.09585,1.10855,1.114725,1.126625,1.132375,1.138,1.143475,1.148825,1.15405,1.159125,1.16405,1.1688749999999999,1.17355,1.178075,1.182475,1.18675,1.190875,1.194875,1.19875,1.202475,1.20605,1.209525,1.21285,1.216025,1.219075,1.224775,1.227425,1.232325,1.234575,1.23865,1.240475,1.245175,1.248675,1.25,],[1.0,1.02898,1.05649,1.08253,1.0909,1.10713,1.1150200000000001,1.13026,1.13767,1.15195,1.15885,1.1656,1.17217,1.17859,1.18486,1.19095,1.19686,1.20265,1.2082600000000001,1.2136900000000002,1.21897,1.2241,1.22905,1.2338500000000001,1.2385000000000002,1.2429700000000001,1.24726,1.25143,1.25542,1.25923,1.26289,1.26973,1.27291,1.27879,1.28149,1.28638,1.28857,1.29421,1.29841,1.3,],[0.96,1.006368,1.050384,1.092048,1.10544,1.131408,1.144032,1.168416,1.180272,1.20312,1.21416,1.22496,1.235472,1.245744,1.255776,1.26552,1.2749759999999999,1.28424,1.293216,1.301904,1.310352,1.31856,1.3264799999999999,1.33416,1.3416,1.348752,1.355616,1.362288,1.3686719999999999,1.374768,1.3806239999999999,1.391568,1.396656,1.406064,1.410384,1.418208,1.4217119999999999,1.430736,1.437456,1.44,],[0.88,0.934096,0.985448,1.034056,1.04968,1.079976,1.094704,1.123152,1.136984,1.16364,1.17652,1.18912,1.201384,1.213368,1.225072,1.23644,1.247472,1.25828,1.268752,1.278888,1.288744,1.29832,1.30756,1.31652,1.3252,1.3335439999999998,1.341552,1.3493359999999999,1.356784,1.363896,1.370728,1.383496,1.3894319999999998,1.400408,1.4054479999999998,1.4145759999999998,1.418664,1.429192,1.4370319999999999,1.44,],[1.04,1.07864,1.11532,1.15004,1.1612,1.1828400000000001,1.19336,1.21368,1.22356,1.2426,1.2518,1.2608,1.26956,1.27812,1.28648,1.2946,1.30248,1.3102,1.31768,1.32492,1.33196,1.3388,1.3454,1.3518,1.358,1.36396,1.36968,1.37524,1.38056,1.38564,1.39052,1.39964,1.40388,1.4117199999999999,1.41532,1.42184,1.42476,1.43228,1.4378799999999998,1.44,],[1.0,1.02898,1.05649,1.08253,1.0909,1.10713,1.1150200000000001,1.13026,1.13767,1.15195,1.15885,1.1656,1.17217,1.17859,1.18486,1.19095,1.19686,1.20265,1.2082600000000001,1.2136900000000002,1.21897,1.2241,1.22905,1.2338500000000001,1.2385000000000002,1.2429700000000001,1.24726,1.25143,1.25542,1.25923,1.26289,1.26973,1.27291,1.27879,1.28149,1.28638,1.28857,1.29421,1.29841,1.3,],[1.92,1.966368,2.0103839999999997,2.052048,2.0654399999999997,2.091408,2.104032,2.128416,2.140272,2.1631199999999997,2.17416,2.18496,2.195472,2.205744,2.215776,2.22552,2.234976,2.24424,2.253216,2.261904,2.270352,2.2785599999999997,2.28648,2.2941599999999998,2.3016,2.308752,2.315616,2.322288,2.328672,2.334768,2.340624,2.351568,2.356656,2.3660639999999997,2.370384,2.378208,2.381712,2.390736,2.397456,2.4,],[1.728,1.7929152,1.8545376,1.9128672,1.931616,1.9679712,1.9856448,2.0197824,2.0363808,2.068368,2.083824,2.098944,2.1136608,2.1280416,2.1420863999999997,2.155728,2.1689664,2.181936,2.1945024,2.2066656,2.2184928,2.229984,2.241072,2.251824,2.26224,2.2722528,2.2818624,2.2912032,2.3001408,2.3086751999999997,2.3168736,2.3321952,2.3393184,2.3524896,2.3585376,2.3694911999999997,2.3743968,2.3870304,2.3964384,2.4,],[2.016,2.0530944,2.0883072,2.1216384,2.132352,2.1531264,2.1632256,2.1827328,2.1922175999999998,2.210496,2.219328,2.227968,2.2363776,2.2445952,2.2526208,2.2604159999999998,2.2679808,2.275392,2.2825728,2.2895232,2.2962816,2.302848,2.309184,2.315328,2.32128,2.3270016,2.3324928,2.3378304,2.3429376,2.3478144,2.3524992,2.3612544,2.3653248,2.3728512,2.3763072,2.3825664,2.3853695999999998,2.3925888,2.3979648,2.4,],[1.0,0.97102,0.94351,0.91747,0.9091,0.89287,0.88498,0.86974,0.86233,0.84805,0.84115,0.8344,0.82783,0.82141,0.81514,0.80905,0.80314,0.79735,0.7917399999999999,0.78631,0.78103,0.7759,0.77095,0.76615,0.7615,0.75703,0.75274,0.74857,0.74458,0.7407699999999999,0.7371099999999999,0.73027,0.72709,0.7212099999999999,0.71851,0.7136199999999999,0.71143,0.7057899999999999,0.7015899999999999,0.7,],[1.0,0.96619,0.934095,0.903715,0.89395,0.875015,0.86581,0.8480300000000001,0.839385,0.822725,0.814675,0.8068,0.799135,0.7916449999999999,0.78433,0.777225,0.77033,0.763575,0.75703,0.750695,0.744535,0.73855,0.732775,0.727175,0.72175,0.716535,0.71153,0.7066650000000001,0.70201,0.697565,0.693295,0.685315,0.681605,0.674745,0.6715949999999999,0.6658900000000001,0.663335,0.656755,0.6518550000000001,0.65,],[1.0,0.98068,0.96234,0.94498,0.9394,0.92858,0.92332,0.91316,0.90822,0.8987,0.8941,0.8896000000000001,0.88522,0.8809400000000001,0.87676,0.8727,0.86876,0.8649,0.86116,0.85754,0.85402,0.8506,0.8473,0.8441000000000001,0.841,0.83802,0.83516,0.83238,0.82972,0.82718,0.82474,0.82018,0.81806,0.8141400000000001,0.8123400000000001,0.80908,0.80762,0.80386,0.8010600000000001,0.8,],]
        
        results = []        
        names = sorted([*self.abilities.keys()])
        
        for name in names:
            results.append([param_calc.get_effect(self.abilities[name], ap) for ap in self.aps])
            
        len_expected = len(expected)
        self.assertEqual(len_expected, len(results))
        
        for i in range(len_expected):
            self.assertListAlmostEqual(expected[i], results[i])

if __name__ == '__main__':
    unittest.main()
